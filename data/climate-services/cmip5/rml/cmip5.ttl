@prefix : <https://w3id.org/hacid/data/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix idlab: <http://example.com/idlab/function/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix top: <https://w3id.org/hacid/onto/top-level/> .
@prefix ccso: <https://w3id.org/hacid/onto/ccso/> .
@prefix data: <https://w3id.org/hacid/onto/data/> .
@prefix dimension: <https://w3id.org/hacid/data/cs/dimension/> .
@prefix time: <https://w3id.org/hacid/data/cs/metric-space/time/> .
@prefix geodetic: <https://w3id.org/hacid/data/cs/metric-space/geodetic/> .
@prefix georegion: <https://w3id.org/hacid/data/cs/geodetic-regions/> .
@prefix hrf: <https://w3id.org/hacid/rml-functions/> .
@base <https://w3id.org/hacid/data/rml/> .


# LOGICAL SOURCE #
:LogicalSource a rml:BaseSource ;
    rml:source [
      a csvw:Table;
      csvw:url "{{ CSV }}";

      csvw:dialect [
        a csvw:Dialect;
        csvw:delimiter ","
      ]
    ];
    rml:referenceFormulation ql:CSV .
  
# TRIPLE MAPPINGS #
:DatasetMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;
    
	rr:subjectMap :DatasetIRI ;
	
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap :DatasetLabel
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:holdsSpecializationOfVariable;
        rr:objectMap :VariableIRI
    ] ;

    rr:predicateObjectMap [
        rr:predicate ccso:usesModel ;
        rr:objectMap :ModelIRI
    ] ;
 
    rr:predicateObjectMap [
        rr:predicate data:dependsOnVariable ;
        rr:objectMap [
            rr:parentTriplesMap :SpatialGridMapping
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:dependsOnVariable ;
        rr:objectMap [
            rr:parentTriplesMap :TemporalGridMapping
        ]
    ] .

:OutputMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;
    
	rr:subjectMap :OutputIRI ;
	
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap :OutputLabel
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:comment ;
        rr:objectMap :OutputDescription
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:holdsSpecializationOfVariable;
        rr:objectMap :VariableIRI
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:dependsOnVariable ;
        rr:objectMap [
            rr:parentTriplesMap :SpatialGridMapping
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate top:hasPart ;
        rr:objectMap [
            rr:parentTriplesMap :DatasetMapping
        ]
    ] .


:VariableMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;
    rr:subjectMap :VariableIRI .

:SimulationMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;
    rr:subjectMap :SimulationIRI ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap :SimulationLabel
    ] ;

    rr:predicateObjectMap [
        rr:predicate ccso:hasOutput ;
        rr:objectMap :OutputIRI
    ] ;

    rr:predicateObjectMap [
        rr:predicate ccso:usesModel ;
        rr:objectMap :ModelIRI 
    ] ;
    
    rr:predicateObjectMap [
        rr:predicate ccso:refersToScenario ;
        rr:objectMap [
            rr:parentTriplesMap :ScenarioMapping
        ]
    ] .    


:ModelMapping a rr:TriplesMap ;
	rml:logicalSource :LogicalSource ;
	rr:subjectMap :ModelIRI ;

      rr:predicateObjectMap [
	  rr:predicate rdfs:label ;
	  rr:objectMap :ModelLabel
      ] ;

      rr:predicateObjectMap [
	  rr:predicate ccso:isMaintainedBy ;
	  rr:objectMap :InstituteIRI
      ] .

:InstituteMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;

    rr:subjectMap :InstituteIRI ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap :InstituteLabel
    ] .

:ScenarioMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;
    rr:subjectMap :ScenarioIRI .

:FormatTemporalGridCall
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant hrf:formatTemporalGrid ] .

:ParamDatetimeStart
    rr:predicate hrf:startDatetime ;
    rr:objectMap [ rml:reference "datetime_start" ] .

:ParamDatetimeStop
    rr:predicate hrf:endDatetime ;
    rr:objectMap [ rml:reference "datetime_stop" ] .

:ParamGranularity
    rr:predicate hrf:granularity ;
    rr:objectMap [ rml:reference "time_frequency" ] .

:TemporalGridMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class data:Variable, data:IndependentVariable, data:DimensionalSpace ;
        fnml:functionValue [
            rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                rr:predicate hrf:template ;
                rr:objectMap [
                    rr:constant "https://w3id.org/hacid/data/cs/temporalgrid/{start_datetime}-{end_datetime}/{grid_type_id}"
                ]
            ] 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:basedOnDimensionalSpace ;
        rr:object dimension:time, time:gregorian
    ] ; 

    rr:predicateObjectMap [
        rr:predicate data:basedOnDimensionalSpace ;
        rr:objectMap [ 
            rr:parentTriplesMap :GenericTemporalGridMapping
        ]
    ] ; 

    rr:predicateObjectMap [
        rr:predicate data:hasExactBoundingRegion ;
        rr:objectMap [ 
            rr:parentTriplesMap :TemporalRegionMapping
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [ 
            rr:termType rr:IRI ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "https://w3id.org/hacid/onto/data/{dimensional_space_type}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasGridStep ;
        rr:objectMap [ 
            rr:datatype xsd:duration ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{grid_step}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasPeriod ;
        rr:objectMap [ 
            rr:datatype xsd:duration ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{grid_period}" ]
                ]
            ]
        ]
    ] .

:GenericTemporalGridMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class data:Variable, data:IndependentVariable, data:DimensionalSpace ;
        fnml:functionValue [
            rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                rr:predicate hrf:template ;
                rr:objectMap [ rr:constant "https://w3id.org/hacid/data/cs/temporalgrid/{grid_type_id}" ]
            ] 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:basedOnDimensionalSpace ;
        rr:object dimension:time, time:gregorian
    ] ; 

    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [ 
            rr:termType rr:IRI ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "https://w3id.org/hacid/onto/data/{dimensional_space_type}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasGridStep ;
        rr:objectMap [ 
            rr:datatype xsd:duration ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{grid_step}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasPeriod ;
        rr:objectMap [ 
            rr:datatype xsd:duration ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{grid_period}" ]
                ]
            ]
        ]
    ] .

:TemporalRegionMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class data:TemporalRegion ;
        fnml:functionValue [
            rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                rr:predicate hrf:template ;
                rr:objectMap [ rr:constant "https://w3id.org/hacid/data/cs/temporalregion/{start_datetime}-{end_datetime}" ]
            ] 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasStartDateTime ;
        rr:objectMap [ 
            rr:datatype xsd:dateTime ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{start_datetime}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:hasEndDateTime ;
        rr:objectMap [ 
            rr:datatype xsd:dateTime ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "{end_datetime}" ]
                ]
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ 
            rr:language "en" ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "Time interval {start_datetime} - {end_datetime}" ]
                ] 
            ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:comment ;
        rr:objectMap [ 
            rr:language "en" ;
            fnml:functionValue [
                rr:predicateObjectMap :FormatTemporalGridCall, :ParamDatetimeStart, :ParamDatetimeStop, :ParamGranularity, [
                    rr:predicate hrf:template ;
                    rr:objectMap [ rr:constant "Time interval starting at date time {start_datetime} and ending at date time {end_datetime}." ]
                ] 
            ]
        ]
    ] .

:SpatialGridMapping a rr:TriplesMap ;
    rml:logicalSource :LogicalSource ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class data:Variable, data:IndependentVariable, data:DimensionalSpace, data:RollingRegularGrid ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant hrf:cmip5SimulationIri ]
            ] ;
            rr:predicateObjectMap [
                rr:predicate hrf:id ;
                rr:objectMap [ rml:reference "id" ]
            ] ;
            rr:predicateObjectMap [
                rr:predicate hrf:ns ;
                rr:objectMap [ rr:constant "https://w3id.org/hacid/data/cs/simulation-spatialgrid/" ]
            ] 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate data:basedOnDimensionalSpace ;
        rr:object dimension:geodetic, geodetic:WGS84
    ] ; 

    rr:predicateObjectMap [
        rr:predicate data:hasExactBoundingRegion ;
        rr:object georegion:World
    ] .


# FUNCTIONS #

:VariableIRI
    rr:termType rr:IRI ;
    rr:class data:Variable, data:DependentVariable ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:fromList ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:arr ;
            rr:objectMap [ rml:reference "variable" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/variable/" ]
        ] 
    ].

:DatasetIRI
    rr:termType rr:IRI ;
    rr:class data:Variable, data:Dataset ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5DatasetIri ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/ds/dataset/" ]
        ] 
    ].

:OutputIRI
    rr:termType rr:IRI ;
    rr:class data:Dataset ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5OutputIri ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/ds/dataset/" ]
        ] 
    ].

:SimulationIRI
    rr:termType rr:IRI ;
    rr:class ccso:Simulation, ccso:GlobalSimulation ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5SimulationIri ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/ds/simulation/" ]
        ] 
    ].

:ModelIRI
    rr:termType rr:IRI ;
    rr:class ccso:GlobalClimateModel, ccso:ClimateModel ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:fromList ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:arr ;
            rr:objectMap [ rml:reference "model" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/ds/model/" ]
        ] 
    ].

:InstituteIRI
    rr:termType rr:IRI ;
    rr:class top:Organisation ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:fromList ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:arr ;
            rr:objectMap [ rml:reference "institute" ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:ns ;
            rr:objectMap [ rr:constant "https://w3id.org/hacid/data/institute/" ]
        ] 
    ].


:DatasetLabel
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5DatasetId ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] 
    ].

:OutputLabel
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5OutputId ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] 
    ].

:SimulationLabel
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:cmip5SimulationId ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:id ;
            rr:objectMap [ rml:reference "id" ]
        ] 
    ].

:ModelLabel
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:eval ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:str ;
            rr:objectMap [ rml:reference "model" ]
        ] 
    ].

:OutputDescription
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:eval ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:str ;
            rr:objectMap [ rml:reference "description" ]
        ] 
    ].

:InstituteLabel
    rr:language "en" ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:eval ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:str ;
            rr:objectMap [ rml:reference "institute" ]
        ] 
    ].

:ScenarioIRI
    rr:termType rr:IRI ;
    rr:class ccso:GreenhouseGasConcentrationPathway ;
    fnml:functionValue [
        rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant hrf:getScenario ]
        ] ;
        rr:predicateObjectMap [
            rr:predicate hrf:scenario ;
            rr:objectMap [ 
                fnml:functionValue [
                    rr:predicateObjectMap [
                        rr:predicate fno:executes ;
                        rr:objectMap [ rr:constant hrf:eval ]
                    ];
                    rr:predicateObjectMap [
                        rr:predicate hrf:str ;
                        rr:objectMap [ 
                            rml:reference "experiment"
                        ]
                    ]
                ] 
            ]
        ]         
    ] .
